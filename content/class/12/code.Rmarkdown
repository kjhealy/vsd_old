---
title: "Code"
date: "2022-03-31"
bibliography: "../../../static/bib/references.bib"
csl: ../../../static/bib/chicago-syllabus-no-bib.csl
tags: ["code"]
weight: 2
editor_options: 
  chunk_output_type: console
---

## Network Data Examples

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
library(tidyverse)
library(socviz)
library(ggraph)
library(tidygraph)


#remotes::install_github("kjhealy/kjhnet")
library(kjhnet)
```

## Paul Revere

### Matrix version

```{r}
head(revere)
tail(revere)
```


```{r}
r_p <- as.matrix(revere[,-1]) %*% t(as.matrix(revere[,-1]))
dim(r_p)

r_p[1:6, 1:6]
    
```

```{r}
r_g <- t(as.matrix(revere[,-1])) %*% as.matrix(revere[,-1])

dim(r_g)

r_g
```


### Tidy version

```{r}
revere_groups
```

```{r}
revere_groups %>%
  ggraph(layout = "kk") +
  geom_edge_link(aes(width = value), color = "gray80") +
  geom_node_label(aes(label = name)) + theme_graph()

```

```{r}
revere_persons %>%
  mutate(centrality = centrality_eigen()) %>%
  ggraph(layout = "stress") +
  geom_edge_link0(aes(edge_width = value), color = "gray60") +
  scale_edge_width(range = c(0.02, 2))+
  geom_node_point() +
  geom_node_label(aes(filter = centrality > 0.9, label = name), size = rel(2.5)) + 
  theme_graph()

```

## The Iliad

### Degree centrality

```{r}
il_tidy
```

```{r}
il_tidy %>%
  activate(nodes) %>%
  mutate(centrality = centrality_degree()) %>%
  as_tibble() %>%
  ggplot(mapping = aes(x = centrality)) +
  geom_histogram() +
  labs(x = "Count of Victories", y = "Count of Warriors ") +
  theme_minimal() +
  theme(legend.position = "top")
```


```{r}
il_tidy %>%
  activate(nodes) %>%
  mutate(centrality = centrality_degree()) %>%
  as_tibble() %>%
  arrange(desc(centrality)) %>%
  top_n(10, wt = centrality) %>%
  ggplot(mapping = aes(x = centrality,
                       y = reorder(name, centrality),
                       color = affil)) +
  geom_point(size = 3) +
  labs(x = "Centrality", y = NULL, color = "Side") +
  theme_minimal() +
  theme(legend.position = "top")
```

### Graph representation

```{r}
il_tidy %>%
  activate(nodes) %>%
  ggraph(layout = "fr") +
  geom_edge_link(color = "gray80") +
  geom_node_point(aes(color = affil)) +
  scale_color_manual(values = c("blue", "red"), 
                     labels = c("Athenian", "Trojan")) +
  guides(color = guide_legend(title = "Side")) +
  labs(title = "Violence in The Iliad") +
  theme(plot.title = element_text(size = rel(3)))

```


```{r}
label_colors <- c(prismatic::clr_lighten("blue", 0.7),
                  prismatic::clr_lighten("red", 0.7))
il_tidy %>%
  activate(nodes) %>%
  mutate(centrality = centrality_degree(mode = "out")) %>%
  ggraph(layout = "graphopt") +
  geom_edge_link(aes(start_cap = label_rect(node1.name),
                     end_cap = label_rect(node2.name)),
                 arrow = arrow(length = unit(1.5, 'mm'))) +
  geom_node_point(aes(color = affil)) +
  scale_color_manual(values = c("blue", "red"),
                     labels = c("Athenian", "Trojan")) +
  guides(color = "none", fill = "none") +
  geom_node_label(aes(filter = centrality > 0,
                      label = name, fill = affil),
                      size = rel(2.5)) +
  scale_fill_manual(values = label_colors) +
  labs(title = "Violence in The Iliad") +
  theme_graph() +
  theme(plot.title = element_text(size = rel(3)))
```

### Betweenness centrality

```{r}
il_tidy %>%
  activate(nodes) %>%
  mutate(centrality = centrality_degree(),
         betweenness = centrality_betweenness()) %>%
  as_tibble() %>%
  arrange(desc(betweenness)) %>%
  top_n(10, wt = betweenness) %>%
  ggplot(mapping = aes(x = betweenness,
                       y = reorder(name,
                       betweenness), color = affil)) +
  geom_point(size = 3) +
  labs(x = "Betweenness", y = NULL, color = "Side") +
  theme_minimal() +
  theme(legend.position = "top")
```

### Alpha centrality

```{r }

il_tidy %>%
  activate(edges) %>%
  filter(act == "kills") %>%
  reroute(from = to, to = from) %>%
  activate(nodes) %>%
  mutate(alpha = centrality_alpha()) %>%
  as_tibble() %>%
arrange(desc(alpha)) %>%
    top_n(10, wt = alpha) %>%
  ggplot(mapping = aes(x = alpha,
                       y = reorder(name, alpha),
                       color = affil)) +
  geom_point(size = 3) +
  labs(x = "Alpha Centrality", y = NULL, color = "Side") +
  theme_minimal() +
  theme(legend.position = "top")
```
