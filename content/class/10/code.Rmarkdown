---
title: "Code"
date: "2022-01-01"
bibliography: "../../../static/bib/references.bib"
csl: ../../../static/bib/chicago-syllabus-no-bib.csl
tags: ["code"]
weight: 2
editor_options: 
  chunk_output_type: console
---

## Mapping 

### Joining tables, and using `geom_polygon()`

```{r}
library(tidyverse)
library(socviz)


theme_map <- function(base_size=9, base_family="") {
    require(grid)
    theme_bw(base_size=base_size, base_family=base_family) %+replace%
        theme(axis.line=element_blank(),
              axis.text=element_blank(),
              axis.ticks=element_blank(),
              axis.title=element_blank(),
              panel.background=element_blank(),
              panel.border=element_blank(),
              panel.grid=element_blank(),
              panel.spacing=unit(0, "lines"),
              plot.background=element_blank(),
              legend.justification = c(0,0),
              legend.position = c(0,0)
              )
}

head(county_map)
dim(county_map)

head(county_data)
dim(county_data)

county_full <- left_join(county_map, county_data, by = "id")

p <- ggplot(data = county_full,
            mapping = aes(x = long, y = lat,
                          fill = pop_dens, 
                          group = group))

p1 <- p + geom_polygon(color = "gray70", size = 0.1) + coord_equal()

p2 <- p1 + scale_fill_brewer(palette="Blues",
                             labels = c("0-10", "10-50", "50-100",
                                        "100-500", "500-1,000",
                                        "1,000-5,000", ">5,000"))

p2 + labs(fill = "Population per\nsquare mile") + theme_map() +
    guides(fill = guide_legend(nrow = 1)) + 
    theme(legend.position = "bottom")

```

### Using simple features and `geom_sf()`

```{r}
library(tidyverse)
library(socviz)
library(colorspace)
library(sf)
library(nycdogs)


nyc_fb <- nyc_license %>%
    group_by(zip_code, breed_rc) %>%
    tally() %>%
    mutate(freq = n / sum(n),
           pct = round(freq*100, 2)) %>%
    filter(breed_rc == "French Bulldog")

nyc_fb

fb_map <- left_join(nyc_zips, nyc_fb)


theme_nymap <- function(base_size=9, base_family="") {
    require(grid)
    theme_bw(base_size=base_size, base_family=base_family) %+replace%
        theme(axis.line=element_blank(),
              axis.text=element_blank(),
              axis.ticks=element_blank(),
              axis.title=element_blank(),
              panel.background=element_blank(),
              panel.border=element_blank(),
              panel.grid=element_blank(),
              panel.spacing=unit(0, "lines"),
              plot.background=element_blank(),
              legend.justification = c(0,0),
              legend.position = c(0.1, 0.6), 
              legend.direction = "horizontal"
        )
}

fb_map %>% 
  select(zip_code, po_name, breed_rc:pct) %>% 
  pull(pct)

fb_map %>% 
  filter(n > 1) %>% 
  ggplot(mapping = aes(fill = pct)) +
    geom_sf(color = "gray80", size = 0.1) +
    scale_fill_viridis_c(option = "A") +
    labs(fill = "Percent of All Licensed Dogs") +
    # This next bit is a hack--we're just positioning the boxes
    # relative to the latitude/longitude coordinates
    annotate(geom = "text", x = -74.145 + 0.029, y = 40.82-0.012, 
           label = "New York City's French Bulldogs", size = 6) + 
    annotate(geom = "text", x = -74.1468 + 0.029, y = 40.8075-0.012, 
           label = "By Zip Code. Based on Licensing Data", size = 5) + 
    theme_nymap() + 
    guides(fill = guide_legend(title.position = "top", 
                               label.position = "bottom",
                             keywidth = 1, nrow = 1))


```

### Keeping zero-count rows

We'll also fix the color here.

```{r}
nyc_license %>%
  filter(extract_year == 2018) %>% 
    group_by(zip_code, breed_rc) %>%
    tally() %>%
    mutate(freq = n / sum(n),
           pct = round(freq*100, 2)) %>%
    filter(breed_rc == "French Bulldog")


nyc_fb <- nyc_license %>%
    group_by(zip_code, breed_rc) %>%
    tally() %>%
    ungroup() %>%
    complete(zip_code, breed_rc, 
             fill = list(n = 0)) %>%
    mutate(freq = n / sum(n),
           pct = round(freq*100, 2)) %>%
    filter(breed_rc == "French Bulldog")


fb_map <- left_join(nyc_zips, nyc_fb)

fb_map

fb_map %>% ggplot(mapping = aes(fill = pct)) +
    geom_sf(color = "gray80", size = 0.1) +
    scale_fill_continuous_sequential(palette = "Oranges") +
   labs(fill = "Percent of All Licensed Dogs in the City") +
  annotate(geom = "text", x = -74.145 + 0.029, y = 40.82-0.012, 
           label = "New York City's French Bulldogs", size = 6) + 
  annotate(geom = "text", x = -74.1468 + 0.029, y = 40.8075-0.012, 
           label = "By Zip Code. Based on Licensing Data", size = 5) + 
    theme_nymap() + 
    guides(fill = guide_legend(title.position = "top", 
                               label.position = "bottom",
                             keywidth = 1, nrow = 1))


```

## Census data 

```{r}
library(tidyverse)
library(colorspace)
library(tigris)
library(sf)

library(tidycensus)
library(cartogram)
```

### Population components example

```{r, message = FALSE}
us_components <- get_estimates(geography = "state", 
                               product = "components")
```

```{r}
us_components

unique(us_components$variable)
```

```{r, message = FALSE}
net_migration <- get_estimates(geography = "county",
                               variables = "RNETMIG",
                               year = 2019,
                               geometry = TRUE,
                               resolution = "20m") %>%
  shift_geometry() # puts Alaska and Hawaii in the bottom left
```

```{r}
net_migration

order <- c("-15 and below", "-15 to -5", 
            "-5 to +5", "+5 to +15", "+15 and up")
  
net_migration <- net_migration %>%
    mutate(groups = case_when(
      value > 15 ~ "+15 and up",
      value > 5 ~ "+5 to +15",
      value > -5 ~ "-5 to +5",
      value > -15 ~ "-15 to -5",
      TRUE ~ "-15 and below"
    )) %>%
    mutate(groups = factor(groups, levels = order))
  
  state_overlay <- states(
    cb = TRUE,
    resolution = "20m") %>%
    filter(GEOID != "72") %>%
    shift_geometry()
  
ggplot() +
    geom_sf(data = net_migration, 
            mapping = aes(fill = groups, color = groups), 
            size = 0.1) +
    geom_sf(data = state_overlay, 
            fill = NA, color = "black", size = 0.1) +
    scale_fill_brewer(palette = "PuOr", direction = -1) +
    scale_color_brewer(palette = "PuOr", direction = -1, guide = "none") +
    coord_sf(datum = NA) +
    theme_minimal() +
    labs(title = "Net migration per 1000 residents by county",
         subtitle = "US Census Bureau 2019 Population Estimates",
         fill = "Rate",
         caption = "Data acquired with the R tidycensus package")

```




