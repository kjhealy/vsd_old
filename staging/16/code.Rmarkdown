---
title: "Code for 16: More on Names"
date: "2020-10-09"
menu:
  show:
    parent: Examples
    weight: 1
type: docs
bibliography: "../../../static/bib/references.bib"
csl: "../../../static/bib/chicago-fullnote-bibliography-no-bib.csl"
tags: ["code"]
editor_options: 
  chunk_output_type: console
---

## Load Libraries


```{r setup, include=TRUE}
knitr::opts_chunk$set(echo = TRUE)

library(here)
library(socviz)
library(tidyverse)

library(babynames)

theme_set(theme_minimal())

```

# Name Heterogeneity

```{r test}
babynames %>% 
  group_by(year, sex) %>%
  slice(which.max(prop)) %>% 
  ggplot(mapping = aes(x = year, y = prop, color = sex)) + 
  geom_line(size = 1) + scale_y_continuous(labels = scales::percent) +
   scale_x_continuous(breaks = seq(1880, 2015, by = 10)) +
   labs(y = "Percent", x = "Year",
        title = "Most Popular Name as a Percent of All Names",
   color = "Gender") + theme(legend.position = "top")

```



```{r}
babynames %>% 
  filter(prop <= 0.001) %>%
  group_by(year, sex) %>% 
  tally() %>%  
  ggplot(mapping = aes(x = year, y = n, color = sex)) + 
  geom_line(size = 1) + scale_y_continuous(labels = scales::comma) +
   scale_x_continuous(breaks = seq(1880, 2015, by = 10)) +
   labs(y = "Count", x = "Year", title = "Names with a frequency of 1 in 1,000 or less",
   color = "Gender") + theme(legend.position = "top")
```


# Blau and Shannon Indices

```{r}
get_blau <- function(feat_n){
    1 - sum((feat_n / sum(feat_n))^2)
  }
  
  
get_shannon <- function(feat_n){
    prop <- feat_n / sum(feat_n)
    -sum(prop * log(prop))
  }
  
babynames %>%
    group_by(year, sex) %>%
    summarize(blau = get_blau(n),
              shannon = get_shannon(n)) %>%
    ggplot(aes(x = year, y = shannon, color = sex)) +
    geom_line(size = 1.2) +
    scale_x_continuous(breaks = seq(1880, 2015, by = 10)) +
    labs(y = "Shannon Index",
         x = "Year",
         color = "Gender") +
    theme(legend.position = "top")

```

# Fads and Fashions

Here's a thing you can do that will be useful for the problem set: 

```{r}
babynames %>% 
  filter(sex == "F", 
         name %in% c("Linda", "Jennifer"))  %>%
    group_by(name) %>%
    mutate(max_yr = year[prop == max(prop)],
           year_c = year - max_yr)
```




